{{- if .Values.ingress.enabled }}
{{- $host := (index .Values.ingress.hosts.kongcloak 0) }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "kongcloak.fullname" $ }}-kong
  annotations:
    kubernetes.io/ingress.class: nginx
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
  {{- end }}
  labels:
    app: {{ template "kongcloak.name" $ }}-kong
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ $host.path }}
            backend:
              serviceName: {{ template "kongcloak.fullname" $ }}-kong
              servicePort: http
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "kongcloak.fullname" $ }}-konga
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
    certmanager.k8s.io/cluster-issuer: {{ $.Values.ingress.issuer.name }}
    kubernetes.io/tls-acme: 'true'
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
  {{- end }}
  labels:
    app: {{ template "kongcloak.name" $ }}-konga
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  rules:
    - host: {{ $host.name }}
      http:
        paths:
          - path: {{ (eq $host.path "/") | ternary "" $host.path }}/konga
            backend:
              serviceName: {{ template "kongcloak.fullname" $ }}-konga
              servicePort: http
  {{- if (and $.Values.ingress.enabled $.Values.ingress.tls) }}
  tls:
    - secretName: letsencrypt-staging
      hosts:
        - {{ $host.name }}
  {{- end }}
{{- end }}
